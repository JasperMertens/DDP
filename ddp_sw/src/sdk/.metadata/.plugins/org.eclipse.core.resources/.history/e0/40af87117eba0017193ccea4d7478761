.text

.global add_c
.func add_c, add_c
.type add_c, %function

add_c:
cmp r2, #0					// while c!=0
beq end_add_c
add r0, r0, r1, lsl #2		// *t + 4*i

ldr r3, [r0]	 			// r3 <= t[i]
adds r1, r3, r2
str r1, [r0], #4			// store r1 to memory adress of r0, increase pointer to memory address by 4
bcc end_add_c

add_c_loop:					// propagate carry
ldr r3, [r0]				// r3 <= t[i]
adds r1, r3, #1
str r1, [r0], #4
bcs add_c_loop

end_add_c:
bx lr
.endfunc
